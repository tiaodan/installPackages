server:
  port: resource_port
  servlet:
    context-path: /api
           
organization-management:
  url: http://127.0.0.1:9527/unit/unitListAll
  
devTypePicture:
  path: C:/other/Web_NMS/resource-management/static/
  
feign-service: 
  log: eurekaSecurityServiceName
  resource: eurekaResourceServiceName
  alarm: eurekaAlarmServiceName
  devconfig: eurekaDevconfigServiceName
  
jizhan:
  id: 1

spring:
  # zipkin: 
    # base-url: http://192.168.3.61:8769
  application:
    name: eurekaResourceServiceName
  datasource:
    dynamic:
      # 是否开启 SQL日志输出，生产环境建议关闭，有性能损耗
      p6spy: true
      hikari:
        connection-timeout: 30000
        max-lifetime: 1800000
        max-pool-size: 15
        min-idle: 5
        connection-test-query: select 1
        pool-name: SunkHikariCP
      # 配置默认数据源
      primary: primary
      datasource:
        # 数据源-1，名称为 primary
        primary:
          username: software_db_username
          password: software_db_password
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://mysql_domain:mysql_port/resource_dbname?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
  aop:
    proxy-target-class: true
  messages:
    encoding: utf-8
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  redis:
    host: redis_domain
    port: redis_port
    password:
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 0
  mqtt-local:
    enabled: true
    url: "tcp://mqtt_domain:mqtt_port"
    clientIdPrefix: ${spring.application.name}
    OamTopic: "$share/hlht/resource-service/status_alarm,$share/hlht/resource-service/status_oam"
    FrontTopic: "front-service/status"
    TopologyTopic: "topology-service/status"
    linkStatus: "front-hlht/linkStatus"
    username: admin
    password: password
    timeout: 30
    keepAlive: 60
  mqtt-ni:
    enabled: true
    url: "tcp://Up_Mqtt_Domain:mqtt_port"
    clientIdPrefix: ${spring.application.name}-ni
    #注意/1/2代表站点
    NiTopic: "north/status/1"
    NoticeTopic: "notice"
    username: admin
    password: password
    timeout: 30
    keepAlive: 60
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 100MB
      resolve-lazily: false

  activemq:
    broker-url: tcp://127.0.0.1:61616
    user: admin
    password: admin
    close-timeout: 15s   # 在考虑结束之前等待的时间
    in-memory: true      # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
    non-blocking-redelivery: false  # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
    send-timeout: 0     # 等待消息发送响应的时间。设置为0等待永远。
    queue-name: active.queue
    topic-name: active.topic.name.model

#  packages:
#  #    trust-all: true #不配置此项，会报错
#    pool:
#        enabled: true
#            max-connections: 10   #连接池最大连接数
#                idle-timeout: 30000   #空闲的连接过期时间，默认为30秒
#
#                 # jms:
#                  #   pub-sub-domain: true  #默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置
#
#                  # 是否信任所有包
#                  #spring.activemq.packages.trust-all=
#                  # 要信任的特定包的逗号分隔列表（当不信任所有包时）
#                  #spring.activemq.packages.trusted=
#                  # 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#                  #spring.activemq.pool.block-if-full=true
#                  # 如果池仍然满，则在抛出异常前阻塞时间。
#                  #spring.activemq.pool.block-if-full-timeout=-1ms
#                  # 是否在启动时创建连接。可以在启动时用于加热池。
#                  #spring.activemq.pool.create-connection-on-startup=true
#                  # 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
#                  #spring.activemq.pool.enabled=false
#                  # 连接过期超时。
#                  #spring.activemq.pool.expiry-timeout=0ms
#                  # 连接空闲超时
#                  #spring.activemq.pool.idle-timeout=30s
#                  # 连接池最大连接数
#                  #spring.activemq.pool.max-connections=1
#                  # 每个连接的有效会话的最大数目。
#                  #spring.activemq.pool.maximum-active-session-per-connection=500
#                  # 当有"JMSException"时尝试重新连接
#                  #spring.activemq.pool.reconnect-on-exception=true
#                  # 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
#                  #spring.activemq.pool.time-between-expiration-check=-1ms
#                  # 是否只使用一个MessageProducer
#                  #spring.activemq.pool.use-anonymous-producers=true




#mybatis plus 设置
mybatis-plus:
  type-aliases-package: com.sunkaisens.ibss.dms.entity
  mapper-locations: classpath:mapper/*/*.xml
  configuration:
    jdbc-type-for-null: null
  global-config:
    # 关闭 mybatis-plus的 banner
    banner: false

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
      health:
        show-details: ALWAYS
        
ibss:
  # 是否异步记录用户操作日志
  openAopLog: true
  shiro:
    # 后端免认证接口 url
    anonUrl: /devTypePicture/**,/login,/logout/**,/regist,/user/check/**
    # token有效期，单位秒
    jwtTimeOut: 3600
    # 更新令牌时间检查配置，10分钟刷新一次     单位 ：秒
    refreshCheckTime: 600
  ip2region:
    enabled: false
  # 单次最大批量入库数量
  max:
    batch:
      insert:
        num: 1000
        
#配置pageHelper分页插件
pagehelper:
  helper-dialect: mysql #指定数据库类型（mysql、oracle）
  reasonable: true #启用合理化，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  support-methods-arguments: true #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  params: count=countSql #指定pageHelper统计某张表中的总记录数
  page-size-zero: true #如果 pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）
 
eureka:
  client: #客户端注册进eureka服务列表内
    enabled: true
    service-url: 
       defaultZone: http://micro_domain:micro_port1/eureka,http://micro_domain:micro_port2/eureka
  instance:
    instance-id: ${spring.application.name}-${server.port}
    prefer-ip-address: true     #访问路径可以显示IP地址

feign:
  hystrix:
    enabled: true
    
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE     
 
info: 
  app.name: ${spring.application.name}
  company.name: www.sunkaisense.com
  
logging: 
  config: log4j2-spring.xml

channel:
  id: statistic

server:
  port: 7390
  servlet:
    context-path: /api

feign-service: 
  admin-service: admin-service

spring:
  # zipkin:
  # base-url: http://192.168.3.61:8769
  application:
    name: oss-nms-ne-service
  datasource:
    dynamic:
      # 是否开启 SQL日志输出，生产环境建议关闭，有性能损耗
      p6spy: true
      hikari:
        connection-timeout: 30000
        max-lifetime: 1800000
        max-pool-size: 30
        min-idle: 10
        connection-test-query: select 1
        pool-name: SunkHikariCP
      # 配置默认数据源
      primary: primary
      datasource:
        # 数据源-1，名称为 primary
        primary: 
          username: root
          password: sunkaisens
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://mysql.com:3306/0203_ne_service?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
        # 数据源-2，名称为 slave
        db2:
          username: root
          password: sunkaisens
          driver-class-name: ccom.mysql.jdbc.Driver
          url: jdbc:mysql://mysql.com:3306/0203_ne_service?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
  aop:
    proxy-target-class: true
  messages:
    encoding: utf-8
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  redis:
    host: redis.com
    port: 6381
    password:
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 0
  mqtt:
    enabled: true
    url: "tcp://emqtt.com:1883"
    clientIdPrefix: ${spring.application.name}
    #OamTopic: "$share/0203/alarm-service/alarm"
    OamTopic: "alarm-service/alarm"
    FrontTopic: "alarm-service/alarm"
    TopologyTopic: "topology-service/alarm"
    resourceTopic: "resource-service/status"
    alarmTopic: "alarm"
    fault: "front-service/alarm"
    linkStatus: "front-service/linkStatus"
    deviceStatus: "front-service/deviceStatus"
    username: admin
    password: password
    timeout: 30
    keepAlive: 60

    #  activemq:
    #    broker-url: tcp://activemq.com:61616
    #    user: admin
    #    password: admin
    #    close-timeout: 15s   # 在考虑结束之前等待的时间
    #    in-memory: true      # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
    #    non-blocking-redelivery: false  # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
    #    send-timeout: 0     # 等待消息发送响应的时间。设置为0等待永远。
    #    mq-queue-alarm: alarm
    #    topic-name: active.topic.name.model

    #    packages:
    #      trust-all: true #不配置此项，会报错
#    pool:
#      enabled: true
#      max-connections: 10   #连接池最大连接数
#      idle-timeout: 30000   #空闲的连接过期时间，默认为30秒

#    jms:
#      pub-sub-domain: true  #默认为false，即queue模式，若要使用topic模式需要配置为true，

#mybatis plus 设置
mybatis-plus:
  type-aliases-package: com.sunkaisens.nms.model
  mapper-locations: mapper/nms/**/*.xml
  configuration:
    jdbc-type-for-null: null
  global-config:
    # 关闭 mybatis-plus的 banner
    banner: false

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
    shutdown:
      enabled: true

ibss:
  # 是否异步记录用户操作日志
  openAopLog: false
  shiro:
    # 后端免认证接口 url
    anonUrl: /login,/logout/**,/regist,/user/check/**,/api/**
    # token有效期，单位秒
    jwtTimeOut: 7200
    # 更新令牌时间检查配置，10分钟刷新一次     单位 ：秒
    refreshCheckTime: 600
  ip2region:
    enabled: false
  # 单次最大批量入库数量
  max:
    batch:
      insert:
        num: 1000

#配置pageHelper分页插件
pagehelper:
  helper-dialect: oracle #指定数据库类型（mysql、oracle）
  reasonable: true #启用合理化，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  support-methods-arguments: true #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  params: count=countSql #指定pageHelper统计某张表中的总记录数
  page-size-zero: true #如果 pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）

eureka:
  client: #客户端注册进eureka服务列表内
    enabled: true
    service-url:
      defaultZone: http://eureka.com:7000/eureka/,http://eureka.com:7001/eureka/
  instance:
    instance-id: ${spring.application.name}-${server.port}
    prefer-ip-address: true     #访问路径可以显示IP地址
    health-check-url-path: ${server.servlet.context-path}/actuator/health

feign:
  hystrix:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE

info:
  app.name: ${spring.application.name}
  company.name: www.sunkaisense.com

logging:
  config: log4j2-spring.xml

cron:
 neTimer: "0 */3 * * * ?"
 cardTimer: "0 */2 * * * ?"
 cardOpen: false
 adminTimer: "0 */2 * * * ?"
 adminOpen: false

udp:
  # 新版本
  local-ip: 172.16.0.43
  local-port: 28600
  remote-ip: 172.16.0.43
  remote-port: 6124

project:
  name: "0203"

ftp:
 pingOpen: false
 pingTime: 120000
 intervalTime: 1000

dev:
  #是否开启设备上报
  open: false
  #上级网管url
  synchronized: http://datacenter.com:7100/v1/nms-resource-service
  #设备来源
  source: unit_1_172.16.0.30
